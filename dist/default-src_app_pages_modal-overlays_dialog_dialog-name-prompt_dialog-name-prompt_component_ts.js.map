{"version":3,"file":"default-src_app_pages_modal-overlays_dialog_dialog-name-prompt_dialog-name-prompt_component_ts.js","mappings":"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","sources":["./src/app/pages/modal-overlays/dialog/dialog-name-prompt/dialog-name-prompt.component.ts","./src/app/pages/modal-overlays/dialog/dialog-name-prompt/dialog-name-prompt.component.html"],"sourcesContent":["import { Component,Input } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\nimport { Router } from '@angular/router';\nimport { RegisterdeviceService } from '../../../../_services/registerdevice.service';\nimport { NbToastrService,NbComponentStatus } from '@nebular/theme';\nimport { FormControl,FormGroup,Validators } from '@angular/forms';\n@Component({\n  selector: 'ngx-dialog-name-prompt',\n  templateUrl: 'dialog-name-prompt.component.html',\n  styleUrls: ['dialog-name-prompt.component.scss'],\n})\nexport class DialogNamePromptComponent {\n  myForm!: FormGroup;\n  @Input() title: string;\n  @Input() deviceId: string;\n  loading = false;\n  bioSection = new FormGroup({\n    name: new FormControl('')\n   \n  });\n  // fetchdata:any[]=[]\n  // deviceRegister:deviceRegisterRequest={\n  //   deviceModelId: 0,\n  //   serialNo: '',\n  //   activeStatus: 0,\n  //   remarks: '',\n  //   serverEnvironmentId: 0,\n  //   id: 0,\n  //   deviceId: ''\n  // }\n  // datafile:any;\n  // dataServerenvironment: any;\n  // enablebutton:boolean=true\n  constructor(protected ref: NbDialogRef<DialogNamePromptComponent>,private service: RegisterdeviceService,private router:Router,private toastrService:NbToastrService) {\n   \n   \n  }\n  ngOnInit(): void {\n    //console.log('here is your title: ', this.title); // displays 'Hello world'\n    this.myForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n     \n    });\n    // this.fetchData()\n    // this.getallServerEnvironment();\n    // if(this.datafile && this.deviceRegister.deviceModelId && this.deviceRegister.serverEnvironmentId ){\n    //   this.enablebutton=false\n\n    // }\n  }\n  cancel() {\n    this.ref.close();\n  }\n\n   // Show Toaster with Common\n   showToast(status: NbComponentStatus,message) {\n    this.toastrService.show(status, `${message}`, { status });\n  }\n\n  submit(name) {\n    \n    if(this.title!='' && this.deviceId !=''){\n      \n      this.loading = true;\n\n      if(name!=''){\n        this.service.otp_verify(this.title,name).subscribe(\n          (res:any) => {\n         \n          if(res.message=='Not-Verified'){\n            this.loading = false;\n             // this.showToast('warning',res.message);\n             this.showToast('warning',res.message);\n          }else if(res){\n            this.showToast('success','OTP Verified Successfully');\n            \n            this.service.deregister(this.title,this.deviceId).subscribe(\n              (res:any) => {\n              this.loading = false;\n              if(res.message==''){\n                 // this.showToast('warning',res.message);\n                 this.showToast('warning',res.message);\n              }else{\n                this.showToast('success','Device DeRegistered Successfully');\n               \n                this.router.routeReuseStrategy.shouldReuseRoute = function () {\n                    return false;\n                }\n               this.router.onSameUrlNavigation = 'reload';\n               this.router.navigate([`pages/forms/deviceregisterList`], {\n                  skipLocationChange: true,\n                  queryParams: { index: 1 }\n                });\n              }\n            },\n            err => {\n              this.showToast('warning',err.error);  \n              this.ref.close();\n            }) \n          }\n        },\n        err => {\n          this.showToast('warning',err.error);  \n          this.ref.close();\n        })\n      }\n     \n    }\n  }\n\n  get f(){\n    return this.myForm.controls;\n  }\n\n  public omit_special_char(e: any) {\n    try {\n        let k;\n        if (/^[a-zA-Z0-9\\s]*$/.test(e.key)) {\n            return true;\n        } else {\n            e.preventDefault();\n            return false;\n        }\n    } catch (e) {\n    }\n}\n// fetchData(){\n//   this.service.getallModel()\n//   .subscribe({\n//     next: data => {\n         \n//       if(data.status==401){\n//         window.sessionStorage.clear();\n//         //this.router.navigateByUrl('/auth/login');\n\n//         this.router.navigate([`/`], {\n//           skipLocationChange: true,\n//         });\n        \n//       }else{\n//         this.fetchdata = data.data;\n//          console.log(\"make\",data.data)\n//       }    \n//     },\n//     error: error => {\n//        console.error('There was an error!', error);\n//     }\n    \n//   })\n\n// }\n// getallServerEnvironment(){\n//   this.service.getallServerEnvironment().subscribe({\n//       next: data => {\n//         if(data.status==401){\n//           window.sessionStorage.clear();\n//           //this.router.navigateByUrl('/auth/login');\n//           this.router.navigate([`/`], {\n//             skipLocationChange: true,\n//           });\n//         }else{\n//           console.log(\"serverenvironment\",data.data);\n//           this.dataServerenvironment = data.data;\n//         }    \n//       },\n//       error: error => {\n//          console.error('There was an error!', error);\n//       }\n          \n//   })\n// }\n\n// make_model(deviceid:number,id:number){\n//   this.deviceRegister.deviceModelId=deviceid;\n//   this.deviceRegister.id=id\n//   console.log(this.deviceRegister)\n// }\n\n// getFileDetails(event){\n//   this.datafile=event.target.files[0]\n//   console.log(event.target.files[0])\n// }\n\n// serverenvironment(e){\n//   this.deviceRegister.serverEnvironmentId=e.id\n//   console.log(e.target.value)\n// }\n\n// upload(){\n//   const formdata=new FormData()\n//   formdata.append(\"file\",this.datafile)\n//   formdata.append(\"body\",JSON.stringify(this.deviceRegister))\n//   this.service.fileUpload(formdata)\n//   .subscribe(res=>console.log(res))\n// }\n\n\n}\n","<form class=\"needs-validation\" [formGroup]=\"myForm\"> \n  <nb-card class= \"nb-card\">\n    \n        <nb-card-header>Enter OTP (Contact Administrator for the OTP)</nb-card-header>\n        <!-- <nb-card-body>\n          <input #name nbInput placeholder=\"Name\">\n        </nb-card-body> -->\n        <nb-card-body>\n          <input type=\"text\" #name nbInput placeholder=\"Enter OTP\" formControlName=\"name\" (keypress)=\"omit_special_char($event)\">\n          <br/>\n          <br/>\n          <div *ngIf=\"f['name'].touched && f['name'].invalid\" class=\"alert alert-danger\">\n            <div *ngIf=\"f['name'].errors && f['name'].errors['required']\">OTP is required.</div>\n          </div>\n        </nb-card-body>\n        <nb-card-footer [nbSpinner]=\"loading\" nbSpinnerStatus=\"info\" nbSpinnerSize=\"giant\">\n          <div style=\"margin: 0px 65px;\" >\n            <button nbButton status=\"success\" type=\"submit\" (click)=\"submit(name.value)\" [disabled]=\"!myForm.valid\">Submit</button>\n            <button class=\"cancel\" nbButton status=\"danger\" (click)=\"cancel()\">Cancel</button>\n\n          </div>  \n        </nb-card-footer>\n  \n  </nb-card>\n  </form>\n<!-- \n<nb-card>\n  \n  <nb-card-header>Import Device Details</nb-card-header>\n  <form >\n  <div class=\"form-group row\">\n    <label for=\"inputModel\" class=\"label col-sm-3 col-form-label labels\">Make/Model/RDsID <span class=\"red\">*</span></label>\n    <div class=\"col-sm-9\">\n      \n      <nb-select fullWidth id=\"deviceModelId\"   placeholder=\"-- Select Make/Model/RDsID --\">\n        <nb-option value=\"\">-- Select Make/Model/RDsID --</nb-option>\n        <nb-option *ngFor=\"let dataModels of fetchdata\" value=\"{{ dataModels.id}}\" (change)=\"make_model(dataModels.mi,dataModels.id)\">{{ dataModels.companyName+'/'+dataModels.name+'/'+dataModels.rdsId}}</nb-option>\n      </nb-select>\n      </div>\n      </div>\n      <div class=\"form-group row\">\n        <label for=\"inputEmail1\" class=\"label col-sm-3 col-form-label  labels\">Server Environment <span class=\"red\">*</span></label>\n        <div class=\"col-sm-9\">\n        <nb-select fullWidth id=\"serverEnvironmentId\" placeholder=\"-- Select Server Environment --\" >\n            <nb-option >-- Select Server Environment --</nb-option>\n            <nb-option *ngFor=\"let serverenvironments of dataServerenvironment\" value=\"{{ serverenvironments}}\" (change)=\"serverenvironment($event)\">{{ serverenvironments.name}}</nb-option>\n             \n         </nb-select>\n         \n         </div>\n         </div>\n         <div class=\"form-group row\">\n            <label for=\"formFileMultiple\" class=\"label col-sm-3 col-form-label\">Upload files <span class=\"red\">*</span></label>\n            <div class=\"col-sm-9\">\n            <input class=\"form-control\" type=\"file\" id=\"formFileMultiple\" accept=\".xls,.xlsx,.xlsm,.xlsb,.csv\" (change)=\"getFileDetails($event)\">\n          <button class=\"button-left\" nbButton status=\"info\" hero   (click)=\"upload()\" [disabled]=\"enablebutton\">Upload\n          </button>\n        </div>\n\n         </div>\n      </form>\n  <nb-card-body>\n      \n  </nb-card-body>\n  <nb-card-footer [nbSpinner]=\"loading\" nbSpinnerStatus=\"info\" nbSpinnerSize=\"giant\">\n\n  </nb-card-footer>\n\n</nb-card> -->\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}